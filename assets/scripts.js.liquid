$(document).ready(function () {
  const products = $('.product');
  const productsPerPage = 12;
  let visibleProducts = productsPerPage;

  // Initially hide all products beyond the first 3
  products.slice(productsPerPage).hide();

  // Function to check if the user has scrolled to the bottom
  function isBottom() {
    return $(window).scrollTop() + $(window).height() >= $(document).height();
  }

  $('.pagespecial-open').on('click', function(e) {
    e.preventDefault();
    
    // Get the href of the clicked menu item
    var pageUrl = $(this).data('link');
    console.log(pageUrl);

    // Load the content of the selected page into the content container
    $('.pagespecial').load(pageUrl + ' #content', function(response, status, xhr) {
      if (status == "error") {
        console.log("Error loading content: " + xhr.status + " " + xhr.statusText);
      } else {
        // Add a class to indicate that the content is now open
        $('.pagespecial').addClass('open');
      }
    });
  });

  $('.product-images img').click(function(){
    let ref = $(this).attr('src')
    console.log(ref)
    $('.product-main img').attr('src', ref)
  })

  $('.custom-dropdown').click(function(){
    $('.dropdown-options').toggle();
    $('.selected-variant img').toggleClass('reverse');
  })

  $('.dropdown-option.stock').on('click', function () {
      const variantId = $(this).data('variant-id');
      const variantTitle = $(this).text();
      $('#addToCartForm input[name="id"]').val(variantId);
      $('#selectedVariant span').text(variantTitle);
      $('#addToCartButton').show();
  });

  $('.product-slider').slick({
      dots: true,
      arrows: false
  });


  $('.cart-button, .cart-close, .cart-overlay, .header-cart').click(function(){
    $('.cart').fadeToggle();
  })

  $('.toggle-more-info').click(function() {
    $(this).find('span').toggle();
    $('.product-info-more').toggle();
  })

  $('.size-guide-open').click(function(){
    $('.size-guide').show();
  })

  $('.size-guide-close, .size-guide-overlay').click(function(){
    $('.size-guide').hide();
  })

  $('.header-menu-toggle').click(function(){
    $('.header-cart, .header-search-open').toggle();
    $('.header-menu-toggle').toggle();
    if ($('.menu-mobile-search').is(':visible')) {
      // The div is visible
      $('.menu-mobile').hide();
    } else {
      // The div is not visible
      $('.menu-mobile').show();
    }
    $('.menu-mobile-search').toggle();
  })  

  $('.header-search-open').click(function(){
    $('.header-menu-toggle').toggle();    
    $('.header-cart, .header-search-open').toggle();
    $('.menu-mobile-search').toggle();
  })  

// Function to format prices as money using Shopify's formatMoney function if available
function formatMoney(amount) {
  if (typeof Shopify !== 'undefined' && Shopify.formatMoney) {
    return Shopify.formatMoney(amount, Shopify.money_format);
  } else {
    // Fallback formatting if Shopify.formatMoney is not available
    return (amount / 100).toLocaleString(undefined, {
      style: 'currency',
      currency: Shopify.currency.active // Assuming Shopify.currency.active holds the active currency code
    });
  }
}

// Function to update the cart item count
function updateCartItemCount() {
  $.ajax({
    type: 'GET',
    url: '/cart.js',
    dataType: 'json',
    success: function(cart) {
      $('#cart-count').text(cart.item_count);
      updateCartTotals(cart);
    }
  });
}

// Function to update the individual item total
function updateItemTotal(variantId, quantity, price) {
  var itemTotalPrice = quantity * price;
  $(`.cart-item-total[data-variant-id="${variantId}"]`).text(formatMoney(itemTotalPrice)); // Assuming prices are in cents
}

// Function to update the cart totals
function updateCartTotals(cart) {
  const total = formatMoney(cart.total_price); // Assuming prices are in cents
  $('.cart-footer-top strong').text(`TOTAL: ${total}`);
  $('.cart-footer-top span:last-child').text(total);
}

$('#addToCartButton').click(function () {
  // Get form data
  const formData = $('#addToCartForm').serialize();

  // Use Shopify's AJAX API to add the variant to the cart
  $.ajax({
    type: 'POST',
    url: '/cart/add.js',
    data: formData,
    dataType: 'json',
    success: function (response) {
      console.log('Item added to cart:', response);

      // Fetch the updated cart content using Shopify's AJAX API
      $.ajax({
        type: 'GET',
        url: '/cart',
        dataType: 'html',
        success: function (cartContent) {
          const extractedContent = $(cartContent).find('#cart-container').html();
          // Update the sidebar cart with the new content
          $('#sidebar-cart').html(extractedContent);
          $('.cart').fadeIn();
          // Update cart item count
          updateCartItemCount();
        }
      });
    }
  });
});

$('.quantity-button').click(function () {
  // Get the variant ID and action from the data attributes
  const variantId = $(this).data('variant-id');
  const action = $(this).data('action');
  
  // Determine the quantity adjustment based on the action
  const quantityAdjustment = action === 'increment' ? 1 : -1;

  // Use Shopify's AJAX API to get the current cart state
  $.ajax({
    type: 'GET',
    url: '/cart.js',
    dataType: 'json',
    success: function (cart) {
      // Find the current quantity of the item
      const currentItem = cart.items.find(item => item.id === variantId);

      // Calculate the new quantity
      const newQuantity = currentItem.quantity + quantityAdjustment;

      // Use Shopify's AJAX API to update the cart
      $.ajax({
        type: 'POST',
        url: '/cart/update.js',
        data: {
          updates: {
            [variantId]: newQuantity,
          },
        },
        dataType: 'json',
        success: function (updatedCart) {
          // Update the quantity display
          const updatedItem = updatedCart.items.find(item => item.id === variantId);
          $(`.quantity-display[data-variant-id="${variantId}"]`).text(updatedItem.quantity);
          // Update cart item count
          updateCartItemCount();
          // Update the individual item total
          updateItemTotal(variantId, updatedItem.quantity, updatedItem.final_price);
        }
      });
    }
  });
});

// Click event for remove buttons
$('.remove-button').click(function () {
  const variantId = $(this).data('variant-id');
  // Use Shopify's AJAX API to update the cart
  $.ajax({
    type: 'POST',
    url: '/cart/update.js',
    data: {
      updates: {
        [variantId]: 0, // Set quantity to 0 to remove the item
      },
    },
    dataType: 'json',
    success: function (updatedCart) {
      // Remove the item's HTML from the cart container
      $(`.cart-item[data-variant-id="${variantId}"]`).remove();
      // Update cart item count
      updateCartItemCount();
    }
  });
});

// Initial update of the cart item count on page load
$(document).ready(function() {
  updateCartItemCount();
});

  
  function updateDisplayedContent(element) {
    let title = element.data('title');
    let price = element.data('price');
    let img = element.data('image');
    let url = element.data('link');
    let shape = element.data('shape');

    // Update the displayed content
    // $('.collections-show-img').attr('src', img)
    $('.collections-show-desc').html(title + '<br>' + price);
    $('.collections-show-link').attr('href', url);
    $('.collections-show-img').attr('src', img)
    $('.collections-show').removeClass('vertical horizontal')
    $('.collections-show').addClass(shape)
  }

  $('.collections .image-container>div').click(function() {
    // Remove the 'active' class from all elements and add it to the clicked element
    $('.collections .image-container>div').removeClass('active');
    $(this).addClass('active');

    // Update the displayed content
    updateDisplayedContent($(this));

    // Show the collections-show element
    $('.collections-show').show();
    $('.collections .image-container').hide()
  });

  $('.collections-show-next').click(function() {
    // Find the next div with the 'active' class
    let next = $('.collections .image-container .active').next("div");

    // If there is no next element, loop back to the first one
    if (next.length === 0) {
      next = $('.collections .image-container>div').first();
    }

    // Remove the 'active' class from all elements and add it to the next element
    $('.collections .image-container>div').removeClass('active');
    next.addClass('active');

    // Update the displayed content
    updateDisplayedContent(next);
  });

  $('.collections-show-prev').click(function() {
    // Find the previous div with the 'active' class
    let prev = $('.collections .image-container .active').prev("div");

    // If there is no previous element, loop back to the last one
    if (prev.length === 0) {
      prev = $('.collections .image-container>div').last();
    }

    // Remove the 'active' class from all elements and add it to the previous element
    $('.collections .image-container>div').removeClass('active');
    prev.addClass('active');

    // Update the displayed content
    updateDisplayedContent(prev);
  });

  $('.collections-show-close').click(function(){
    $('.collections-show').hide()
    $('.collections .image-container').css('display', 'flex')
  })

  $('#privacy_policy, #confirm_age').on('change', function() {
    updateSubmitButtonState();
  });

  function updateSubmitButtonState() {
    const privacyPolicyChecked = $('#privacy_policy').prop('checked');
    const confirmAgeChecked = $('#confirm_age').prop('checked');
    $('#submit_button').prop('disabled', !privacyPolicyChecked || !confirmAgeChecked);
  }


  function addNewAddress() {
    var formData = $('#new-address-form').serialize();
    
    $.ajax({
      type: 'POST',
      url: '/account/addresses', // Update the endpoint based on your requirements
      data: formData,
      success: function(response) {
        // Handle the success response, e.g., display a message or update the UI
        console.log('Address added successfully');
      },
      error: function(error) {
        // Handle the error response
        console.error('Error adding address:', error);
      }
    });
  }

    // Load more products when reaching the bottom

  $(window).scroll(function () {
    if (isBottom()) {
      // Show the next 3 products
      products.slice(visibleProducts, visibleProducts + productsPerPage).show();

      // If there are no more products, detach the scroll event to prevent unnecessary checks
      if (visibleProducts + productsPerPage >= products.length) {
        $(window).off('scroll');
      }

      // Update the counter for visible products
      visibleProducts += productsPerPage;
    }
  });




});

$(document).ready(function () {
  function resizeImages($row) {
    var containerWidth = $row.width();
    var totalImageWidth = 0;

    $row.find('img').each(function () {
      totalImageWidth += $(this).outerWidth(true);
    });

    var scale = containerWidth / totalImageWidth;
    var newHeight = $row.find('img').first().height() * scale;

    $row.find('img').css('height', newHeight + 'px').css('opacity', 1);

    // Add class based on image orientation
    $row.find('img').each(function () {
      if ($(this).height() > $(this).width()) {
        $(this).parent().attr('data-shape', 'vertical');
      } else {
        $(this).parent().attr('data-shape', 'horizontal');
      }
    });
  }

  // Set initial height to a fixed value
  $('.image-container img').css('height', '100px'); // Adjust the height as needed

  // Handle window load event
  $(window).on('load', function () {
    $('.image-container').each(function () {
      resizeImages($(this));
    });

    // Handle window resize event
    $(window).resize(function () {
      $('.image-container').each(function () {
        resizeImages($(this));
      });
    });
  });
});




